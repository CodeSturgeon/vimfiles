set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

Plugin 'scrooloose/syntastic'
Plugin 'chase/vim-ansible-yaml'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"" Syntastic section

" Syntastic hush
let g:syntastic_mode_map = { 'mode': 'passive'}
" Enabled Syntastic to use :lnext without running :Errors
" Still need to run :Errors to get the QuickFix to populate though
" Better to use the :lop or :lw (not sure of difference yet) to open the Locations List
let g:syntastic_always_populate_loc_list = 1

" Run a one off check
:nnoremap <leader>c :w<cr>:SyntasticCheck<cr>
" Get Syntastic to STFU
:nnoremap <leader>r :SyntasticReset<cr>
" Quick navigation for Syntastic
:nnoremap <leader>] :lnext<cr>
:nnoremap <leader>[ :lprev<cr>

" Set tags file
set tags=~/.vim/tagfile

" Make sure that vi compatible mode is off
set nocompatible

" Scroll rather than let your cursor get less than N from the edge
set scrolloff=2

" Stop join from using two spaces after punctuation
set nojoinspaces

" Make sure backspace works over these characters
set backspace=indent,eol,start 

" Put mode name in status line
set showmode

" Highlight the current line
set cursorline

" Make the highlight 'bold' in terminals
hi CursorLine cterm=bold

" turn on filetype plugins
filetype plugin on

" Only show status if there are at least two windows
set laststatus=1

" Switch on syntax highlighting
syntax on

" Let vim set the title of terminals better
set title

" Turn on the position markers in the bottom right
set ruler

" Do not prompt to save buffers before switching
set hidden

" Have tab command completion work like the shell
" Displays a list and only completes up to common point
set wildmode=list:longest

let javaScript_fold=1
let python_highlight_space_errors=1

" Wrap lines by default
set wrap

" Don't wrap in the middle of words
set linebreak

" Use modelines
set modeline

" Allow 5 modelines
set modelines=5

" {{{ Search settings
" Switch on search pattern highlighting.
set hlsearch
" Switch on search highlighting as you type
set incsearch
" }}}

" {{{ Aliases for my common mistypes
:ab W w
:ab Wq wq
:ab WQ wq
:ab Wqa wqa
:ab WQa wqa
:ab Q q
:ab Qa qa
:ab QA qa
:ab Wa wa
:ab WA wa
" }}}

" Default folding to off
set foldlevel=999

" Project plugin settings (:help project-flags)
let g:proj_flags="stc"

" vim:fdm=marker
